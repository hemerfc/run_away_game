make.exe all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.3
# Built for x86_64-pc-msys
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
 
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Thu Sep 30 21:04:53 2021

 
# Variables

# environment
FPS_BROWSER_APP_PROFILE_STRING = Internet Explorer
# environment
SYSTEMDRIVE = C:
# makefile (from 'C:\devkitpro\devkitARM/base_rules', line 6)
PORTLIBS_PATH := C:\devkitpro/portlibs
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 23)
AS := arm-none-eabi-as
# makefile (from 'Makefile', line 74)
OUTPUT := /c/hemerson/Projetos/games/gba/game/game
# environment
LC_ALL = C
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 24)
AR := arm-none-eabi-gcc-ar
# environment
USERPROFILE = C:\Users\hemer
# environment
VBOX_MSI_INSTALL_PATH = C:\Program Files\Oracle\VirtualBox\
# makefile (from 'Makefile', line 110)
OFILES :=   global.o home.o main.o node.o player.o room.o 
# environment
LOCALAPPDATA = C:\Users\hemer\AppData\Local
# environment
VSCODE_IPC_HOOK_EXTHOST = \\.\pipe\vscode-ipc-87120d0c-cd87-44f2-9d77-be5eb84e91c2-sock
# makefile (from 'Makefile', line 76)
VPATH := /c/hemerson/Projetos/games/gba/game/source  
# makefile (from 'Makefile', line 82)
CFILES := global.c home.c main.c node.c player.c room.c
# environment
VSCODE_CWD = C:\Users\hemer\AppData\Local\Programs\Microsoft VS Code
# environment
SYSTEMROOT = C:\Windows
# makefile (from 'Makefile', line 55)
LIBS := -lmm -ltonc -lgfx
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 43)
SILENTMSG := @echo
# environment
PROCESSOR_LEVEL = 6
# environment
PSMODULEPATH = C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\PowerShell\Modules\;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\PowerShell\Modules\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\PowerShell\Modules\
# default
MAKE_COMMAND := make
# makefile (from 'Makefile', line 106)
OFILES_BIN := 
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
CHROME_CRASHPAD_PIPE_NAME = \\.\pipe\crashpad_28688_GVWAEBGJIFVHNEZD
# makefile (from 'Makefile', line 83)
CPPFILES := 
# environment
FPS_BROWSER_USER_PROFILE_STRING = Default
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'Makefile', line 34)
GFXLIBS := libgfx.a
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = C:\Users\hemer\AppData\Roaming\Code\CachedData\7f6ab5485bbc008386c4386d08766667e155244e
# environment
ERLANG_HOME = C:\Program Files\erl-24.0.3
# environment
LANG = C
# default
.LOADED := 
# environment
TMP = /home/hemer/AppData/Local/Temp
# default
.INCLUDE_DIRS = /usr/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile (from 'Makefile', line 84)
SFILES := 
# environment
ONEDRIVE = C:\Users\hemer\OneDrive
# environment
DEVKITARM = C:\devkitpro\devkitARM
# makefile
CURDIR := /c/hemerson/Projetos/games/gba/game
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'Makefile', line 33)
MUSIC := 
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 80)
DEPSDIR := /c/hemerson/Projetos/games/gba/game/build
# environment
PROGRAMFILES = C:\Program Files
# environment
MFLAGS = -pqrR
# default
.SHELLFLAGS := -c
# environment
!C: = c:\hemerson\Projetos\games\gba\game
# environment
COMMONPROGRAMW6432 = C:\Program Files\Common Files
# automatic
+D = $(patsubst %/,%,$(dir $+))
 
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 1)
MAKEFILE_LIST := Makefile C:\devkitpro\devkitARM/gba_rules C:\devkitpro\devkitARM/base_rules C:\devkitpro\devkitARM/base_tools
# makefile (from 'Makefile', line 49)
ASFLAGS := -g -mthumb -mthumb-interwork
# automatic
@F = $(notdir $@)
# environment
PT8HOME = C:\Program Files\Cisco Packet Tracer 8.0
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_PID = 28688
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 28)
RANLIB := arm-none-eabi-gcc-ranlib
# environment
DEVKITPPC = /opt/devkitpro/devkitPPC
# makefile (from 'Makefile', line 112)
HFILES := 
# makefile (from 'Makefile', line 31)
INCLUDES := include
# automatic
*F = $(notdir $*)
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from 'Makefile', line 14)
LIBTONC := C:\devkitpro/libtonc
# environment
FLEXID_LIBRARY_PATH = C:\Program Files (x86)\Kepware\KEPServerEX 6\
# environment
VSCODE_NLS_CONFIG = {"locale":"pt-br","availableLanguages":{},"_languagePackSupport":true}
# makefile (from 'Makefile', line 114)
INCLUDE := -iquote /c/hemerson/Projetos/games/gba/game/include -IC:\devkitpro/libgba/include -IC:\devkitpro/libtonc/include -I/c/hemerson/Projetos/games/gba/game/build
# environment
ONEDRIVECONSUMER = C:\Users\hemer\OneDrive
# default
MAKE_HOST := x86_64-pc-msys
# environment
PROGRAMDATA = C:\ProgramData
# environment
SIMATIC_OAM = C:\Program Files\Common Files\Siemens\Automation\Simatic OAM
# default
SHELL := /bin/sh
# environment
PROJ = C:\hemerson\Projetos
# environment
HOMEPATH = \Users\hemer
# default
MAKECMDGOALS := all
# environment
RUBYOPT = -Eutf-8
# makefile (from 'Makefile', line 108)
OFILES_SOURCES :=  global.o home.o main.o node.o player.o room.o 
# environment
DRIVERDATA = C:\Windows\System32\Drivers\DriverData
# environment
COMSPEC = C:\Windows\system32\cmd.exe
# environment
DIRF2021_PATH = C:\Arquivos de Programas RFB\Dirf2021
# environment
WINDIR = C:\Windows
# makefile (from 'Makefile', line 85)
BINFILES := 
# environment
MAKELEVEL := 0
# makefile (from 'Makefile', line 118)
LIBPATHS := -L/c/hemerson/Projetos/games/gba/game -LC:\devkitpro/libgba/lib -LC:\devkitpro/libtonc/lib
# default
MAKE = $(MAKE_COMMAND)
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 14)
PATH := /C\devkitpro/tools/bin:/C\devkitpro/devkitARM/bin:/c/Program Files/Common Files/Siemens/Automation/Simatic OAM/bin:/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/opt/devkitpro/tools/bin:/c/Program Files (x86)/Rockwell Software/RSCommon:/c/Windows/system32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/c/Windows/System32/OpenSSH:/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/c/Program Files/Microsoft SQL Server/130/Tools/Binn:/c/Program Files/Microsoft SQL Server/Client SDK/ODBC/170/Tools/Binn:/c/Program Files/Git/cmd:/c/Program Files (x86)/Microsoft SQL Server/150/DTS/Binn:/c/Program Files/Azure Data Studio/bin:/c/Program Files (x86)/Microsoft SQL Server/150/Tools/Binn:/c/Program Files/Microsoft SQL Server/150/Tools/Binn:/c/Program Files/Microsoft SQL Server/150/DTS/Binn:/c/Program Files (x86)/Common Files/Rockwell:/c/Program Files (x86)/Rockwell Software/RSCommon:/c/Program Files (x86)/Rockwell Aut 
omation/Common/Components:/c/Program Files (x86)/Rockwell Software:/c/Program Files/Microsoft SQL Server/Client SDK/ODBC/130/Tools/Binn:/c/Program Files (x86)/Microsoft SQL Server/130/Tools/Binn:/c/Program Files/Microsoft SQL Server/130/DTS/Binn:/c/Program Files/Microsoft SQL Server/120/Tools/Binn:/c/Program Files (x86)/Rockwell Software/RSView Enterprise:/c/Program Files/dotnet:/c/Program Files/CMake/bin:/c/Program Files/PuTTY:/c/Program Files (x86)/Microsoft SQL Server/Client SDK/ODBC/110/Tools/Binn:/c/Program Files (x86)/Microsoft SQL Server/120/Tools/Binn:/c/Program Files (x86)/Microsoft SQL Server/120/DTS/Binn:/opt/devkitpro/msys2/usr/bin:/c/hemerson/Projetos/games/gba/grit:/home/hemer/.cargo/bin:/c/msys64/mingw64/bin:/opt/devkitpro/devkitA64/bin:/c/Ruby27-x64/bin:/home/hemer/AppData/Local/Programs/Python/Python39/Scripts:/home/hemer/AppData/Local/Programs/Python/Python39:/home/hemer/AppData/Local/Microsoft/WindowsApps:/c/Program Files/Azure Data Studio/bin:/home/hemer/AppData/Local/Programs/Microsoft VS Code/bin:/c/Program Files (x86)/Rico Suter/NSwagStudio:/home/hemer/.dotnet/tools:/home/hemer/.nimble/bin
# environment
ZES_ENABLE_SYSMAN = 1
# environment
COMPUTERNAME = DESKTOP-8H63IVN
# default
MAKEFILES := 
# automatic
^F = $(notdir $^)
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 5)
UNAME_R := 3.2.0-340.x86_64
# environment
PROMPT = $P$G
# environment
QT_DEVICE_PIXEL_RATIO = auto
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 19)
PREFIX := arm-none-eabi-
# makefile (from 'Makefile', line 63)
LIBDIRS := C:\devkitpro/libgba C:\devkitpro/libtonc
# environment
LOGONSERVER = \\DESKTOP-8H63IVN
# environment
VSCODE_LOG_NATIVE = false
# environment
USERNAME = hemer
# environment
COMMONPROGRAMFILES = C:\Program Files\Common Files
# environment
AUTINSTLOG = C:\ProgramData\Siemens\Automation\Logfiles\Setup\
# automatic
?F = $(notdir $?)
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 50)
bin2o = 	bin2s -a 4 -H `(echo $(<F) | tr . _)`.h $< | $(AS) -o $(<F).o
# environment
PROGRAMW6432 = C:\Program Files
# environment
DEVKITPRO = C:\devkitpro
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 4)
UNAME_S := MSYS_NT-10.0-19042
# environment
PATHEXT = .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.RB;.RBW
# automatic
+F = $(notdir $+)
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
USERDOMAIN = DESKTOP-8H63IVN
# 'override' directive
GNUMAKEFLAGS := 
# environment
OS = Windows_NT
# makefile
.DEFAULT_GOAL := build
# makefile (from 'Makefile', line 39)
ARCH := -mthumb -mthumb-interwork
# default
MAKE_VERSION := 4.3
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 44)
SILENTCMD := @
# environment
PROGRAMFILES(X86) = C:\Program Files (x86)
# makefile (from 'Makefile', line 29)
BUILD := build
# makefile (from 'Makefile', line 50)
LDFLAGS = -g $(ARCH) -Wl,-Map,$(notdir $*.map)
# environment
USERDOMAIN_ROAMINGPROFILE = DESKTOP-8H63IVN
# environment
NUMBER_OF_PROCESSORS = 12
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 30)
ISVC = $(or $(VCBUILDHELPER_COMMAND),$(MSBUILDEXTENSIONSPATH32),$(MSBUILDEXTENSIONSPATH))
# environment
PUBLIC = C:\Users\Public
# environment
FXC2_DIR = C:\Program Files (x86)\NVIDIA Corporation\FX Composer 2.5
# environment
MOZ_PLUGIN_PATH = C:\Program Files (x86)\Foxit Software\Foxit PDF Reader\plugins\
# makefile (from 'C:\devkitpro\devkitARM/gba_rules', line 9)
LIBGBA := C:\devkitpro/libgba
# environment
APPDATA = C:\Users\hemer\AppData\Roaming
# makefile (from 'Makefile', line 41)
CFLAGS := -g -Wall -O2 -mcpu=arm7tdmi -mtune=arm7tdmi -mthumb -mthumb-interwork
# environment
HOMEDRIVE = C:
# environment
PROCESSOR_ARCHITECTURE = AMD64
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
HOME = /home/hemer
# environment
COMMONPROGRAMFILES(X86) = C:\Program Files (x86)\Common Files
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 13)
DEVKITPATH = $(shell echo "$(DEVKITPRO)" | sed -e 's/^\([a-zA-Z]\):/\/\1/')
# makefile (from 'C:\devkitpro\devkitARM/gba_rules', line 7)
PORTLIBS := C:\devkitpro/portlibs/gba C:\devkitpro/portlibs/armv4
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
TEMP = /home/hemer/AppData/Local/Temp
# environment
VSCODE_IPC_HOOK = \\.\pipe\f7c6c98e9406e6c454b5fb84d22d87a1-1.60.2-main-sock
# environment
TERM = xterm-256color
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 27)
NM := arm-none-eabi-gcc-nm
# environment
PYTHON_ROOT = C:\Python24\
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# environment
ALLUSERSPROFILE = C:\ProgramData
# makefile (from 'Makefile', line 28)
TARGET := game
# makefile (from 'Makefile', line 97)
LD := arm-none-eabi-gcc
# environment
SESSIONNAME = Console
 
# makefile (from 'Makefile', line 47)
CXXFLAGS := -g -Wall -O2 -mcpu=arm7tdmi -mtune=arm7tdmi -mthumb -mthumb-interwork -fno-rtti -fno-exceptions
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 26)
STRIP := arm-none-eabi-strip
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# environment
PROCESSOR_REVISION = 9e0a
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 22)
CXX := arm-none-eabi-g++
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 21)
CC := arm-none-eabi-gcc
# makefile (from 'C:\devkitpro\devkitARM/base_tools', line 25)
OBJCOPY := arm-none-eabi-objcopy
# makefile (from 'Makefile', line 30)
SOURCES := source
# makefile (from 'Makefile', line 32)
DATA := 
# environment
SIMATIC_OAM_DATA = C:\ProgramData\Siemens\Automation\Simatic OAM
# environment
PROCESSOR_IDENTIFIER = Intel64 Family 6 Model 158 Stepping 10, GenuineIntel
# variable set hash-table stats:
# Load=164/1024=16%, Rehash=0, Collisions=30/294=10%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# /c/hemerson/Projetos/games/gba/game/source (device 3864640807, inode 12384898975713986): 13 files, no impossibilities.
# . (device 3864640807, inode 3659174697405385): 14 files, no impossibilities.
# source (device 3864640807, inode 12384898975713986): 13 files, no impossibilities.

# 40 files, no impossibilities in 3 directories.

# Implicit Rules

%.a:
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 12):
	$(SILENTMSG) $(notdir $@)
	@rm -f $@
	$(SILENTCMD)$(AR) -rc $@ $^

%.arm.o: %.arm.cpp
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 18):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CXX) -MMD -MP -MF $(DEPSDIR)/$*.arm.d $(CXXFLAGS) -marm -c $< -o $@ $(ERROR_FILTER)

%.arm.o: %.arm.c
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 23):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.arm.d $(CFLAGS) -marm -c $< -o $@ $(ERROR_FILTER)

%.arm.o: %.arm.m
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 28):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.arm.d $(OBJCFLAGS) -marm -c $< -o $@ $(ERROR_FILTER)

%.thumb.o: %.thumb.cpp
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 33):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CXX) -MMD -MP -MF $(DEPSDIR)/$*.thumb.d $(CXXFLAGS) -mthumb -c $< -o $@ $(ERROR_FILTER)

%.thumb.o: %.thumb.c
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 38):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.thumb.d $(CFLAGS) -mthumb -c $< -o $@ $(ERROR_FILTER)

%.thumb.o: %.thumb.m
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 43):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.thumb.d $(OBJCFLAGS) -mthumb -c $< -o $@ $(ERROR_FILTER)

%.iwram.o: %.iwram.cpp
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 48):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CXX) -MMD -MP -MF $(DEPSDIR)/$*.iwram.d $(CXXFLAGS) -marm -mlong-calls -c $< -o $@ $(ERROR_FILTER)

%.iwram.o: %.iwram.c
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 53):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.iwram.d $(CFLAGS) -marm -mlong-calls -c $< -o $@ $(ERROR_FILTER)

%.iwram.o: %.iwram.m
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 58):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.iwram.d $(OBJCFLAGS) -marm -mlong-calls -c $< -o $@ $(ERROR_FILTER)

%.itcm.o: %.itcm.cpp
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 63):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CXX) -MMD -MP -MF $(DEPSDIR)/$*.itcm.d $(CXXFLAGS) -marm -mlong-calls -c $< -o $@ $(ERROR_FILTER)

%.itcm.o: %.itcm.c
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 68):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.itcm.d $(CFLAGS) -marm -mlong-calls -c $< -o $@ $(ERROR_FILTER)

%.itcm.o: %.itcm.m
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 73):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.itcm.d $(OBJCFLAGS) -marm -mlong-calls -c $< -o $@ $(ERROR_FILTER)

%.o: %.cpp
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 79):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CXX) -MMD -MP -MF $(DEPSDIR)/$*.d $(CXXFLAGS) -c $< -o $@ $(ERROR_FILTER)

%.o: %.c
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 84):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.d $(CFLAGS) -c $< -o $@ $(ERROR_FILTER)

%.o: %.m
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 89):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.d $(OBJCFLAGS) -c $< -o $@ $(ERROR_FILTER)

%.o: %.s
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 94):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.d -x assembler-with-cpp $(ASFLAGS) -c $< -o $@ $(ERROR_FILTER)

%.o: %.S
#  recipe to execute (from 'C:\devkitpro\devkitARM/base_rules', line 99):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.d -x assembler-with-cpp $(ASFLAGS) -c $< -o $@ $(ERROR_FILTER)

%.gba: %.elf
#  recipe to execute (from 'C:\devkitpro\devkitARM/gba_rules', line 13):
	$(SILENTCMD)$(OBJCOPY) -O binary $< $@
	@echo built ... $(notdir $@)
	$(SILENTCMD)gbafix $@

%_mb.elf:
#  recipe to execute (from 'C:\devkitpro\devkitARM/gba_rules', line 19):
	$(SILENTMSG) linking multiboot
	$(SILENTCMD)$(LD) -specs=gba_mb.specs $(LDFLAGS) $(OFILES) $(LIBPATHS) $(LIBS) -o $@

%.elf:
#  recipe to execute (from 'C:\devkitpro\devkitARM/gba_rules', line 24):
	$(SILENTMSG) linking cartridge
	$(SILENTCMD)$(LD)  $(LDFLAGS) -specs=gba.specs $(OFILES) $(LIBPATHS) $(LIBS) -o $@

# 21 implicit rules, 0 (0.0%) terminal.
# Files

# Not a target:
C:\devkitpro\devkitARM/gba_rules:
#  Implicit rule search has been done.
#  Last modified 2020-07-27 23:27:14
#  File has been updated.
#  Successfully updated.

# Not a target:
C:\devkitpro\devkitARM/base_rules:
#  Implicit rule search has been done.
#  Last modified 2020-07-27 23:27:14
#  File has been updated.
#  Successfully updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2021-09-30 02:12:24.1041411
#  File has been updated.
#  Successfully updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 
#  recipe to execute (from 'Makefile', line 132):
	@echo clean ...
	@rm -fr $(BUILD) $(TARGET).elf $(TARGET).gba $(GFXLIBS)

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all: build
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/10=0%

# Not a target:
C:\devkitpro\devkitARM/base_tools:
#  Implicit rule search has been done.
#  Last modified 2020-07-27 23:27:14
#  File has been updated.
#  Successfully updated.

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := build
# automatic
# * := 
# automatic
# < := 
# automatic
# + := 
# automatic
# % := 
# automatic
# ^ := 
# automatic
# ? := 
# automatic
# | := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=3/20=15%
#  recipe to execute (from 'Makefile', line 124):
	@[ -d $@ ] || mkdir -p $@
	@$(MAKE) --no-print-directory -f $(CURDIR)/gfxmake
	@$(MAKE) --no-print-directory -C $(BUILD) -f $(CURDIR)/Makefile

.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PHONY: build clean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=10/1024=1%, Rehash=0, Collisions=0/33=0%
# VPATH Search Paths

# No 'vpath' search paths.

# General ('VPATH' variable) search path:
# /c/hemerson/Projetos/games/gba/game/source

# strcache buffers: 1 (0) / strings = 62 / storage = 590 B / avg = 9 B
# current buf: size = 8162 B / used = 590 B / count = 62 / avg = 9 B

# strcache performance: lookups = 98 / hit rate = 36%
# hash-table stats:
# Load=62/8192=1%, Rehash=0, Collisions=6/98=6%
# Finished Make data base on Thu Sep 30 21:04:53 2021

 
